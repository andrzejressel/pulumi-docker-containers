name: Build and Test

# permissions:
#   contents: read
#   id-token: write

on:
  workflow_call:
    inputs:
      pulumi-version:
        type: string
        default: ''
        description: "The version of Pulumi to use"
      image:
        type: string
        description: "The name of the image that will be built"
        required: true
      docker-username:
        type: string
        description: "The username to use when pushing the image"
        required: true
        default: 'pulumi'
      # sdk:
      #   type: string
      #   default: ''
      #   description: "XXX"
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_CI_ROLE_ARN:
        required: true
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      ARM_TENANT_ID:
        required: true
      ARM_SUBSCRIPTION_ID:
        required: true
      PULUMI_ACCESS_TOKEN:
        required: true

jobs:
  build:
    name: Build
    strategy:
      matrix:
        go-version: [1.21.x]
    runs-on: ubuntu-latest
    steps:
      - name: Set pulumi version
        if: ${{ inputs.pulumi-version != '' }}
        run: echo "PULUMI_VERSION=${{ inputs.pulumi-version }}" >> $GITHUB_ENV
      # If no version of Pulumi is supplied by the incoming event (e.g. in the
      # case of a PR or merge to main), we use the latest production version:
      - name: Set version to latest
        if: ${{ inputs.pulumi-version == '' }}
        run: |
          echo "PULUMI_VERSION=$(curl https://www.pulumi.com/latest-version)" >> $GITHUB_ENV
      - name: DEBUG
        run: echo "PULUMI_VERSION=${{ env.PULUMI_VERSION }}"
      - uses: actions/checkout@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Build
        # We only build the "kitchen sink" image for AMD64 as it's rather large
        # and we want to steer users to use the single SDK images going forward:
        run: |
          docker build \
            -f docker/pulumi/Dockerfile \
            --platform linux/amd64 \
            -t ${{ inputs.docker-username }}/pulumi:${{ env.PULUMI_VERSION }} \
            --target base \
            --build-arg PULUMI_VERSION=${{ env.PULUMI_VERSION }} \
            --load \
            docker/pulumi
      - name: Install go
        uses: actions/setup-go@v2
        with:
          go-version: "1.21.1"
      - name: Compile tests
        working-directory: tests
        run: |
          GOOS=linux GOARCH=amd64 go test -c -o /tmp/pulumi-test-containers ./...
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 14400 # 4 hours
          role-session-name: pulumi-docker-containers@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - name: Run Pulumi Template Tests
        run: |
          docker run \
            -e RUN_CONTAINER_TESTS=true \
            -e PULUMI_ACCESS_TOKEN=${PULUMI_ACCESS_TOKEN} \
            -e PULUMI_ORG=${PULUMI_ORG} \
            -e ARM_CLIENT_ID=${ARM_CLIENT_ID} \
            -e ARM_CLIENT_SECRET=${ARM_CLIENT_SECRET} \
            -e ARM_TENANT_ID=${ARM_TENANT_ID} \
            -e ARM_SUBSCRIPTION_ID=${ARM_SUBSCRIPTION_ID} \
            -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
            -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
            -e AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN} \
            -e AWS_REGION=${AWS_REGION} \
            --volume /tmp:/src \
            --entrypoint /bin/bash \
            ${{ inputs.docker-username }}/pulumi:${{ env.PULUMI_VERSION }} \
            -c "/src/pulumi-test-containers -test.parallel=1 -test.timeout=1h -test.v -test.run TestPulumiTemplateTests"
      - name: Run CLI Tool Tests
        run: |
          docker run \
            -e RUN_CONTAINER_TESTS=true \
            -e SDKS_TO_TEST=${SDKS_TO_TEST} \
            -e PULUMI_ACCESS_TOKEN=${PULUMI_ACCESS_TOKEN} \
            -e PULUMI_ORG=${PULUMI_ORG} \
            -e ARM_CLIENT_ID=${ARM_CLIENT_ID} \
            -e ARM_CLIENT_SECRET=${ARM_CLIENT_SECRET} \
            -e ARM_TENANT_ID=${ARM_TENANT_ID} \
            -e ARM_SUBSCRIPTION_ID=${ARM_SUBSCRIPTION_ID} \
            -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
            -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
            -e AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN} \
            -e AWS_REGION=${AWS_REGION} \
            --volume /tmp:/src \
            --entrypoint /bin/bash \
            ${{ env.DOCKER_USERNAME }}/pulumi:${{ env.PULUMI_VERSION }} \
            -c "/src/pulumi-test-containers -test.parallel=1 -test.timeout=1h -test.v -test.run TestCLIToolTests"
